{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gift","map","img","id","title","image","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAS,IACnBP,GAAc,SAAAQ,GAAI,OAAKN,GAAL,mBAAoBM,OACtCL,EAAc,MAKlB,SACG,uBACAM,KAAK,OACLC,MAAQR,EACRS,SAjBmB,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,a,+BCLlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,MAAK,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBb,QATzB,kBAaZM,GAbY,4CAAH,sDCAPQ,EAAc,SAAC,GAAsB,IAApBH,EAAmB,EAAnBA,MAAOD,EAAY,EAAZA,MAEjC,OACI,sBAAKK,UAAU,yCAAf,UACI,qBAAKC,IAAML,EAAQM,IAAMP,IACzB,4BAAKA,QCHJQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0Bb,mBAAS,CAC/BoB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACNzB,EAAQC,GAAUyB,MAAK,SAAAC,GACnBH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGlB,CAACrB,IAEGsB,EDbwBK,CAAc3B,GAAjCc,EAAZ,EAAOP,KAAac,EAApB,EAAoBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDjB,IAElDqB,GAAW,mBAAGJ,UAAU,mCAAb,oBAEjB,qBAAKA,UAAU,YAAf,SAEQH,EAAOL,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEdbiB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWpB,KAAK,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEGA,SAAWA,GADLA,Y,MCX9B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d2f5ffe5.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.length > 2) {\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit } >\n           <input \n           type=\"text\"\n           value={ inputValue }\n           onChange={ handleInputChange }\n           />\n        </form>\n    )\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\nexport const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=J6yLMDNrZvmLLr6flpbhcRqfclUZ6HVx`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gift = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            image: img.images?.downsized_medium.url\n        }\n    });\n\n    return gift;\n}","import React from 'react';\n\nexport const GifGridItem = ({ image, title }) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ image } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const {data:images, loading} = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loding</p>}\n\n        <div className=\"card-grid\">\n            {\n                images.map(img => \n                <GifGridItem\n                key={ img.id }\n                { ...img } />)\n            }\n        </div>\n        </>\n    )\n}\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category).then(imgs => {\n            setState({\n                data: imgs,\n                loading: false\n            });\n        });\n    }, [category]);\n\n    return state;\n\n}\n","import { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n        <>\n        <h2>GifExpertApp</h2>\n        <AddCategory setCategories={ setCategories } />\n        <hr />\n\n        <ol>\n            {\n                categories.map( category => \n                     <GifGrid\n                        key={ category }\n                        category={ category } \n                     />\n                )\n            }\n        </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}